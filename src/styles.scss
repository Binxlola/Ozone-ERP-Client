@use '@angular/material' as mat;
@use 'sass:map';
// Plus imports for other components in your app.


// Be sure that you only ever include this mixin once!
@include mat.core();

// Define theme palette colors.
// Available color palettes: https://material.io/design/color/
$RACS-primary: mat.define-palette(mat.$teal-palette);
$RACS-accent: mat.define-palette(mat.$blue-palette, A200, A100, A400);
$RACS-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$RACS-theme: mat.define-light-theme((
  color: (
    primary: $RACS-primary,
    accent: $RACS-accent,
    warn: $RACS-warn,
  )
));

$color-config: mat.get-color-config($RACS-theme);
$typo-config: mat.get-typography-config($RACS-theme);

$primary-palette: map.get($color-config, 'primary');
$accent-palette: map.get($color-config, 'accent');
$warn-palette: map.get($color-config, 'warn');

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($RACS-theme);

/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
a {text-decoration: none;}

.color-warn {
  color: mat.get-color-from-palette($warn-palette, 500);
}

.h-100 {
  height: 100%;
}

.w-100 {
  width: 100%;
}
